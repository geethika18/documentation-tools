<!-- Generated by documentation.js. Update this documentation by updating the source code. -->

### Table of Contents

-   [setCompatibilityMode][1]
    -   [Parameters][2]
-   [getUsersDetailsAsync][3]
    -   [Parameters][4]
-   [showUserProfileAsync][5]
    -   [Parameters][6]
-   [startChatAsync][7]
    -   [Parameters][8]
-   [getIntegerationServiceTokenAsync][9]
    -   [Parameters][10]
-   [getDeviceIdAsync][11]
    -   [Parameters][12]
-   [showContactPickerAsync][13]
    -   [Parameters][14]
-   [isTalkBackEnabledAsync][15]
    -   [Parameters][16]
-   [readTalkBackMessage][17]
    -   [Parameters][18]
-   [showImagePickerAsync][19]
    -   [Parameters][20]
-   [showAttachmentPickerAsync][21]
    -   [Parameters][22]
-   [downloadAttachmentAsync][23]
    -   [Parameters][24]
-   [isAttachmentDownloadingAsync][25]
    -   [Parameters][26]
-   [cancelAttachmentDownloadAsync][27]
    -   [Parameters][28]
-   [showPlacePickerAsync][29]
    -   [Parameters][30]
-   [showBarcodeScannerAsync][31]
    -   [Parameters][32]
-   [showQRcodeScannerAsync][33]
    -   [Parameters][34]
-   [showDurationPickerAsync][35]
    -   [Parameters][36]
-   [getDeviceLocationAsync][37]
    -   [Parameters][38]
-   [generateUUIDAsync][39]
    -   [Parameters][40]
-   [getCurrentDeviceLocationAsync][41]
    -   [Parameters][42]
-   [showNativeErrorMessage][43]
    -   [Parameters][44]
-   [getAppLocaleAsync][45]
    -   [Parameters][46]
-   [getIsAppTimeFormat24HoursAsync][47]
    -   [Parameters][48]
-   [getCalendarNameAsync][49]
    -   [Parameters][50]
-   [getConversationParticipantsCountAsync][51]
    -   [Parameters][52]
-   [getConversationParticipantsAsync][53]
    -   [Parameters][54]
-   [getConversationNameAsync][55]
    -   [Parameters][56]
-   [getConversationTypeAsync][57]
    -   [Parameters][58]
-   [dismissCurrentScreen][59]
-   [showProgressBar][60]
    -   [Parameters][61]
-   [hideProgressBar][62]
-   [getCurrentUserIdAsync][63]
    -   [Parameters][64]
-   [setNativeToolbarProperties][65]
    -   [Parameters][66]
-   [getPackagePropertiesAsync][67]
    -   [Parameters][68]
-   [showImageImmersiveView][69]
    -   [Parameters][70]
-   [openAttachmentImmersiveView][71]
    -   [Parameters][72]
-   [openImmersiveViewForAttachmentList][73]
    -   [Parameters][74]
-   [hasStorageAccessForAttachmentType][75]
    -   [Parameters][76]
-   [generateBase64ThumbnailAsync][77]
    -   [Parameters][78]
-   [getFontSizeMultiplierAsync][79]
    -   [Parameters][80]
-   [getLocalizedStringsAsync][81]
    -   [Parameters][82]
-   [getPackageCustomSettingsAsync][83]
    -   [Parameters][84]
-   [logError][85]
    -   [Parameters][86]
-   [logToReport][87]
    -   [Parameters][88]
-   [recordEvent][89]
    -   [Parameters][90]
-   [recordTelemetryEvent][91]
    -   [Parameters][92]
-   [isCurrentUserO365SubscribedAsync][93]
    -   [Parameters][94]
-   [getO365UserDetailsAsync][95]
    -   [Parameters][96]
-   [getForwardContextAsync][97]
    -   [Parameters][98]
-   [getClientDetailsAsync][99]
    -   [Parameters][100]
-   [hardwareBackPressCallback][101]
    -   [Parameters][102]
-   [locInited][103]
    -   [Parameters][104]
-   [getString][105]
    -   [Parameters][106]
-   [showLocationOnMap][107]
    -   [Parameters][108]
-   [printf][109]
    -   [Parameters][110]
-   [performAuthenticationAsync][111]
    -   [Parameters][112]
-   [isAuthenticationTyepSupportedAsync][113]
    -   [Parameters][114]
-   [performSpeechToTextAsync][115]
    -   [Parameters][116]
-   [openLinkInBrowser][117]
    -   [Parameters][118]
-   [performHTTPRequest][119]
    -   [Parameters][120]
-   [Constants][121]
-   [initFormAsync][122]
    -   [Parameters][123]
-   [submitFormRequest][124]
    -   [Parameters][125]
-   [submitFormRequestV2][126]
    -   [Parameters][127]
-   [submitFormRequestWithResponses][128]
    -   [Parameters][129]
-   [submitFormRequestWithoutDismiss][130]
    -   [Parameters][131]
-   [updateForm][132]
    -   [Parameters][133]
-   [canRespondToFormAsync][134]
    -   [Parameters][135]
-   [getFormAsync][136]
    -   [Parameters][137]
-   [getFormStatusAsync][138]
    -   [Parameters][139]
-   [getMyFormResponsesAsync][140]
    -   [Parameters][141]
-   [getBatchResponsesAsync][142]
    -   [Parameters][143]
-   [getResponsesForTimeRangeAsync][144]
    -   [Parameters][145]
-   [sumbitFormResponse][146]
    -   [Parameters][147]
-   [sumbitFormResponseWithoutDismiss][148]
    -   [Parameters][149]
-   [sumbitBatchFormResponse][150]
    -   [Parameters][151]
-   [shouldSeeFormSummaryAsync][152]
    -   [Parameters][153]
-   [getFormUserCapabilitiesAsync][154]
    -   [Parameters][155]
-   [isSubscribed][156]
    -   [Parameters][157]
-   [getFormSummaryAsync][158]
    -   [Parameters][159]
-   [getFlatFormSummaryAsync][160]
    -   [Parameters][161]
-   [getProcessedFormSummaryAsync][162]
    -   [Parameters][163]
-   [getAggregatedFormSummaryAsync][164]
    -   [Parameters][165]
-   [getFormURLAsync][166]
    -   [Parameters][167]
-   [shareFormURL][168]
    -   [Parameters][169]
-   [getFormReactionAsync][170]
    -   [Parameters][171]
-   [showAllReactions][172]
    -   [Parameters][173]
-   [likeForm][174]
-   [addCommentOnForm][175]
    -   [Parameters][176]
-   [respondToForm][177]
-   [sendRemindersToRespond][178]
-   [copyFormAndForward][179]
-   [closeForm][180]
-   [showEditFormPage][181]
-   [updateFormPropertiesAsync][182]
    -   [Parameters][183]
-   [sendNotificationToUsers][184]
    -   [Parameters][185]
-   [generateThumbnailForPDFAsync][186]
    -   [Parameters][187]
-   [Assets][188]
-   [KASFormEmptyModule][189]
-   [findPosition][190]
    -   [Parameters][191]
-   [getStyle][192]
    -   [Parameters][193]
-   [isIOSVersionAbove11][194]
-   [getErrorPropsForTelemetry][195]
    -   [Parameters][196]
-   [removeElementFromArray][197]
    -   [Parameters][198]
-   [CustomNotificationMessage][199]
-   [KASActionPackageProperties][200]
-   [KASActionProperties][201]
-   [KASAttachment][202]
    -   [toJSON][203]
-   [KASAttachment][204]
    -   [toJSON][205]
-   [KASAttachment][206]
    -   [toJSON][207]
-   [KASAttachment][208]
    -   [toJSON][209]
-   [KASAttachmentFactory][210]
-   [KASQuestionConfig][211]
-   [KASQuestionConfig][212]
-   [KASQuestionConfig][213]
-   [KASQuestionResult][214]
-   [KASQuestionResult][215]
-   [KASQuestionResult][216]
-   [KASQuestionResult][217]
-   [KASAttachmentListQuestionResult][218]
-   [attachmentListType][219]
-   [userInfo][220]
-   [timeStamps][221]
-   [attachmentsResponseJSONStrings][222]
-   [KASClient][223]
-   [KASCountryPhoneCode][224]
-   [KASForm][225]
-   [KASFormAggregatedSummary][226]
-   [KASFormBatchResponseUnit][227]
-   [KASFormFlatSummary][228]
    -   [getRespondedUserIds][229]
    -   [getQuestionResponsesForUserId][230]
        -   [Parameters][231]
    -   [getResponsesForUserId][232]
        -   [Parameters][233]
    -   [getAllResponses][234]
    -   [getTotalResponseCount][235]
-   [KASFormProcessedSummary][236]
-   [KASFormProperty][237]
-   [KASFormPropertyFactory][238]
-   [KASFormPropertyUpdateFactory][239]
-   [KASFormPropertyUpdateInfo][240]
-   [KASFormReaction][241]
-   [KASFormResponse][242]
-   [KASFormResponseNotificationModel][243]
-   [KASFormUserCapabilities][244]
-   [KASForwardContext][245]
-   [KASLocation][246]
-   [KASNativeToolbarProperties][247]
-   [KASO365User][248]
-   [getResultsOrder][249]
-   [KASOptionResult][250]
-   [KASPhoneNumber][251]
-   [KASQuestion][252]
-   [KASQuestionValidationResponse][253]
-   [KASQuestionOption][254]
-   [KASUser][255]
-   [KASValidationRule][256]
-   [KASVisibilityRule][257]

## setCompatibilityMode

To simulate clients on older versions, versions starting from "0", "1", "2", ...

### Parameters

-   `version` **[string][258]** 

## getUsersDetailsAsync

Gets users' details (name, pic, phone number, etc.) against their ids

### Parameters

-   `userIds` **[Array][259]&lt;[string][258]>** array of user ids
-   `callback` **Callback** with below parameters:-   -   -   @param {Dictionary&lt;UserId: string, UserInfo: KASUser>} userIdToInfoMap (users' details against their ids) can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## showUserProfileAsync

Shows profile page/details of a user

### Parameters

-   `userId` **[string][258]** of the user whose profile is to be shown
-   `isMiniProfile` **[boolean][260]** whether to show mini-profile first
-   `callback`  

## startChatAsync

Starts chat with a user

### Parameters

-   `userId` **[string][258]** of the user
-   `callback`  

## getIntegerationServiceTokenAsync

Gets users' details (name, pic, phone number, etc.) against their ids

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {string} token got from integeration service
    -   -   -   @param {string} error message in case of error, null otherwise

## getDeviceIdAsync

Gets deviceId

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {string} deviceId got from integeration service
    -   -   -   @param {string} error message in case of error, null otherwise

## showContactPickerAsync

Shows a native contact picker, and returns an array of all the selected users' details

### Parameters

-   `title` **[string][258]** of Contact Picker
-   `selectedMutableUser` **[Array][259]&lt;[string][258]>** array of selected userIds
-   `selectedImmutableUser` **[Array][259]&lt;[string][258]>** array of fixed selected userIds
-   `isSingleSelection` **[boolean][260]** single selection in Contact Picker
-   `callback` **Callback** with below parameters:-   -   -   @param {KASUser\[]} selectedUsers (array of user details) can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## isTalkBackEnabledAsync

Gets whether talkback is enabled or not

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {boolean} talkBackEnabled true if talkback is enabled

## readTalkBackMessage

Reads the text if TalkBack/VoiceOver enabled

### Parameters

-   `talkBackMessage`  
-   `string` **talkBackText** to read by talkback

## showImagePickerAsync

Shows a native image picker, and returns the selected image path

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {string} selectedImagePath can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## showAttachmentPickerAsync

Displays an attachment picker in the native layer

### Parameters

-   `supportedTypes`  array of supported attachment types for the picker.
-   `props`  additional props to configure the picker
-   `callback`  callback with list of selected attachments

## downloadAttachmentAsync

Download the attachment specified

### Parameters

-   `attachment`  attachment with a valid server path to download
-   `callback`  callback on download completion

## isAttachmentDownloadingAsync

Download the attachment specified

### Parameters

-   `attachment`  attachment with a valid server path to download
-   `callback`  callback on download completion

## cancelAttachmentDownloadAsync

Cancel a download operation queued for an attachment

### Parameters

-   `attachment`  
-   `callback`  

## showPlacePickerAsync

Shows a native place picker, and returns the selected place (lt, lg, n)

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {KASLocation} selectedLocation can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## showBarcodeScannerAsync

Launches the barcode scanner and returns the scanned object

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {string} barcodeInfo can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## showQRcodeScannerAsync

Launches the QR code scanner and returns the scanned object

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {string} qrCodeInfo can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## showDurationPickerAsync

Shows a native duration picker with day/hour/minute

### Parameters

-   `defaultDurationInMinutes` **[number][261]** the default duration to be shown on picker
-   `callback` **Callback** with below parameters:-   -   -   @param {number} durationInMinutes selected duration in minutes
    -   -   -   @param {string} error message in case of error, null otherwise

## getDeviceLocationAsync

Gets the previously stored device location

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {string} location can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## generateUUIDAsync

Gets the new UUID

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {string} uuid newly generated uuid
    -   -   -   @param {string} error message in case of error, null otherwise

## getCurrentDeviceLocationAsync

Gets the current device location

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {string} location can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## showNativeErrorMessage

Shows a native alert (for iOS) or a toast (for Android) with the message

### Parameters

-   `message` **[string][258]** 

## getAppLocaleAsync

Gets the current app locale, the language in which the app is rendered, useful for localizing MiniApp's strings

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {string} locale can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## getIsAppTimeFormat24HoursAsync

Gets the current app time format is 24hours or not, the time format selected by user, useful for formatting date time strings properly

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {string} isAppTimeFormat24Hours can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## getCalendarNameAsync

Gets the current system calendar setting. This is mainly for iOS to identify the calendar name set in phone setting like Gregorian or Japanese or Buddhists.

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {string} calendarName can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## getConversationParticipantsCountAsync

Gets all the participant-ids of the current conversation

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {string} name can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## getConversationParticipantsAsync

Gets all the participant-ids of the current conversation

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {string\[]} participants Array of members for the  current group. Will return empty array if user if not the member of the group.

## getConversationNameAsync

Gets the current conversation name

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {string} name can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## getConversationTypeAsync

Gets the current conversation type

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {number} conversationType can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## dismissCurrentScreen

Dismiss the current screen (Creation, Response, or Summary)

## showProgressBar

Shows a native full sreen progress bar with the given text

### Parameters

-   `text` **[string][258]** 

## hideProgressBar

Hides the current progress bar, if any

## getCurrentUserIdAsync

Gets the current user id who has opened the MiniApp

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {string} userId can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## setNativeToolbarProperties

Sets few properties when using native toolbar

### Parameters

-   `properties` **[KASNativeToolbarProperties][262]** 

## getPackagePropertiesAsync

Gets the package properties (user given)

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {JSON} properties can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## showImageImmersiveView

Shows Image in Immersive view.

### Parameters

-   `urls` **[Array][259]&lt;[string][258]>** Array of images url:
-   `currentImageIndex`  

## openAttachmentImmersiveView

Open attachment in Immersive view.

### Parameters

-   `attachmentObj` **[KASAttachment][263]** 

## openImmersiveViewForAttachmentList

Open attachment in Immersive view.

### Parameters

-   `attachmentList`  
-   `atIndex`  
-   `attachmentObj` **[KASAttachment][263]** 

## hasStorageAccessForAttachmentType

checks whether app has read/write access to the storage

### Parameters

-   `type`  
-   `callback`  
-   `attachmentType` **KASAttachmentType** 

## generateBase64ThumbnailAsync

Generates Base64 thumbnail for an image whose localPath is given

### Parameters

-   `localPath` **[string][258]** localPath for the imageAttachment whose thumbnail needs to be generated:
-   `callback`  

## getFontSizeMultiplierAsync

Gets the font size multiplier for large text.
Current only required by iOS.

### Parameters

-   `callback`  

## getLocalizedStringsAsync

Gets the localized strings' dictionary based on current app locale.
Strings must be provided inside the package with names like: strings_en.json, strings_hi.json, etc.

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {JSON} strings can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## getPackageCustomSettingsAsync

Gets all the customization settings for a package (Used in case of Type-4 packages and their base).

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {JSON} settings can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## logError

Logs an error for "Send report"

### Parameters

-   `error` **[string][258]** string

## logToReport

Logs data for "Send report"

### Parameters

-   `data` **[string][258]** string

## recordEvent

Recording event for load and error telemetry

### Parameters

-   `eventName` **[string][258]** string
-   `eventType` **[string][258]** string
-   `props` **[string][258]** JSON

## recordTelemetryEvent

Recording event for independent telemetry

### Parameters

-   `eventName` **[string][258]** string
-   `props` **[string][258]** JSON

## isCurrentUserO365SubscribedAsync

Checks if the current user an O365 subscriber

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {boolean} subscribed true if subscribed, false otherwise

## getO365UserDetailsAsync

Gets details of current logged-in O365 user

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {Json} returns the UserDetails in Json structure

## getForwardContextAsync

Gets Forward Context details such as : Card Creation is in forwarded mode

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {Json} returns the Context Details in Json structure

## getClientDetailsAsync

Gets the client details

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {JSON} properties can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## hardwareBackPressCallback

Registers a callback to be executed on hardware back button press (for Android)

### Parameters

-   `callback` **Callback** to be executed

## locInited

Initializes the localization strings' map

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {boolean} success denotes the success/failure of the initialization

## getString

Returns a string from the localized strings' file

### Parameters

-   `stringId` **[string][258]** 

## showLocationOnMap

shows a particular location as mentioned in KASLocation

### Parameters

-   `location` **[KASLocation][264]** 

## printf

Returns a string.

### Parameters

-   `main`  
-   `string` **[string][258]** denotes the formatted string. Specifier should be mentioned like {0},{1},{2}.....
-   `args` **[Array][259]&lt;[string][258]>** array of arguments.

## performAuthenticationAsync

If authentication type is allowed, this API performs the authentication and returns success/false status
else it returns an error string with reason why authentication is not possible.

### Parameters

-   `authenticationType` **KASAuthenticationType** type of authentication.
-   `callback` **Callback** with below parameters:-   -   -   @param {boolean} isSuccessful true if the form is not yet expired
    -   -   -   @param {string} reasonCode reason code in case of error, null otherwise

## isAuthenticationTyepSupportedAsync

Checks if authentication of type is possible or not.

### Parameters

-   `authenticationType` **KASAuthenticationType** type of authentication.
-   `callback` **Callback** with below parameters:-   -   -   @param {boolean} isSuccessful true if finger printing is possible
    -   -   -   @param {string} reasonCode reason code why finger print is not possible

## performSpeechToTextAsync

Opens native voice to text conversion UI and returns the text for the voice input given by user.

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {boolean} text converted text for the voice input given by user
    -   -   -   @param {string} error any error that happens in native during voice to speech conversion

## openLinkInBrowser

Opens given http url in browser. For strings not starting with http, it is a no-op

### Parameters

-   `httpUrlStr` **[string][258]** 

## performHTTPRequest

performs an http request and returns the response as specified below:

### Parameters

-   `url` **[string][258]** base url to open
-   `parametersJSON` **[string][258]** jsonstring containing parameters can be given as null.
                                    If given as null a request to the url provided above will be made.
                                    Parameters include request header,query parameters(default blank), request method(default GET)
                                    and request body(The body to be posted if request method is POST. default blank.)
                                    The keys for parameters are:
                                    a.) "method" : request method. example: "POST". defaults to "GET".
                                    b.) "requestBody": body of request in case of "POST". defaults to blank.
                                    c.) "requestHeaders": headers to be sent with request. should be a json with
                                                            key as request header and value as the desired value. defaults to blank.
                                    d.) "queryParameters": query parameters. will be encoded in url. should be a json with
                                                            key as parameter name and value as its value. defaults to blank.
                                    e.) "requestResourcePath": will be appended to base url. default is blank.
-   `callback` **Callback** callback with below parameters:-   -   -   @param {string} response response body returned
                                         This could have two possible config:
                                        If request was a success it returns jsonstring with following keys:
                                         a.) "HttpResponseCode" : The response code of request.
                                        b.) "HttpResponseHeader": The response HTTP headers
                                        c.) "HttpResponseBody": The response body returned for request.
                                        If there was a Network error then it returns:
                                        a.) "HttpErrorCode": The error code
                                        b.) "HttpErrorMessage": The error message eg. Malformed URL, Cannot connect to host etc.
    -   -   -   @param {string} error error if any : This includes the standard error code defined in KASClient documentation.

## Constants

## initFormAsync

Initializes and returns an empty form object based on the default form file present in the package

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {KASForm} form can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## submitFormRequest

Submits the newly created form as a request. This results a new conversation card

### Parameters

-   `form` **[KASForm][265]** 
-   `shouldInflate`  

## submitFormRequestV2

Submits the newly created form as a request. This results a new conversation card

### Parameters

-   `form` **[KASForm][265]** 
-   `shouldDismiss`  
-   `shouldSendToSubscribers`  

## submitFormRequestWithResponses

Submits the newly created form as a request with responses

### Parameters

-   `form` **[KASForm][265]** 
-   `responses`  
-   `shouldDismiss`  
-   `isResponseAnonymous`  
-   `shouldSendToSubscribers`  

## submitFormRequestWithoutDismiss

Submits the newly created form as a request. This results a new conversation card

### Parameters

-   `form` **[KASForm][265]** 
-   `shouldInflate`  

## updateForm

use for making changes in form fields like title, description and settings.

### Parameters

-   `fields`  
-   `shouldInflate`  
-   `callback`  

## canRespondToFormAsync

Gets whether the current user can respond to the form

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {boolean} canRespond true if current user is allowed to respond

## getFormAsync

Gets the form object associated with the conversation card

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {KASForm} form can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## getFormStatusAsync

Gets the status of the form associated with the conversation card

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {boolean} isActive true if the form is not yet expired
    -   -   -   @param {string} error message in case of error, null otherwise

## getMyFormResponsesAsync

Gets all the responses of the current user against the form

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {KASFormResponse\[]} responses can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## getBatchResponsesAsync

Gets all the responses of the current user against the form

### Parameters

-   `offset`  
-   `batchSize`  
-   `callback` **Callback** with below parameters:-   -   -   @param {KASFormResponse\[]} responses can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## getResponsesForTimeRangeAsync

Gets all the responses of the current form for given time range

### Parameters

-   `startTime` **[number][261]** start timestamp of time range
-   `endTime` **[number][261]** end timestamp of time range
-   `userId` **[string][258]** for which response will be fetched. Should be empty to fetch responses of whole survey.
-   `callback` **Callback** with below parameters:-   -   -   @param {KASFormResponse\[]} responses of the survey for given userId.

## sumbitFormResponse

Submits a new response against the form associated with the conversation card
This will dismiss the current screen

### Parameters

-   `questionToAnswerMap` **[JSON][266]** question id to answer mapping
-   `responseId` **[string][258]** to be filled if the current response is an edit/update to a previous one
-   `isEdit` **[boolean][260]** denotes if the current response is an edit/update to a previous one
-   `showInChatCanvas` **[boolean][260]** denotes if a separate chat card needs to be created for this response or not
-   `isAnonymous` **[boolean][260]** denotes if the response should be registered as anonymous or not

## sumbitFormResponseWithoutDismiss

Submits a new response against the form associated with the conversation card
This won't dismiss the current screen

### Parameters

-   `questionToAnswerMap` **[JSON][266]** question id to answer mapping
-   `responseId` **[string][258]** to be filled if the current response is an edit/update to a previous one
-   `isEdit` **[boolean][260]** denotes if the current response is an edit/update to a previous one
-   `showInChatCanvas` **[boolean][260]** denotes if a separate chat card needs to be created for this response or not
-   `isAnonymous` **[boolean][260]** denotes if the response should be registered as anonymous or not

## sumbitBatchFormResponse

Submits a new response against the form associated with the conversation card
This won't dismiss the current screen

### Parameters

-   `responses` **[Array][259]&lt;[KASFormBatchResponseUnit][267]>** question id to answer mapping
-   `showInChatCanvas` **[boolean][260]** denotes if a separate chat card needs to be created for this response or not
-   `isAnonymous` **[boolean][260]** denotes if the response should be registered as anonymous or not
-   `shouldDismiss`  
-   `shouldDismis` **[boolean][260]** denotes the current screen will dismiss or not

## shouldSeeFormSummaryAsync

Gets whether the form summary is visible to the current user

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {boolean} shouldSeeSummary true if current user is allowed to see summary

## getFormUserCapabilitiesAsync

Gets form permissions

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {KASFormUserCapabilities} permissions

## isSubscribed

Gets whether the current user is subscriber or not

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {boolean} isSubscribed true if current user subscriber

## getFormSummaryAsync

Gets flat responses by all the users, and processed summary from all the responses associated
with the form. It requires two callbacks:

### Parameters

-   `mostUpdatedCallback` **Callback** to immediately get the most updated summary from local database. It has below parameters:-   -   -   @param {KASFormFlatSummary} flatSummary can be null in case of error
    -   -   -   @param {KASFormProcessedSummary} processedSummary can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise
-   `notifyCallback` **Callback** to get notified with the latest summary fetched from server. It has below parameters:-   -   -   @param {KASFormFlatSummary} flatSummary can be null in case of error
    -   -   -   @param {KASFormProcessedSummary} processedSummary can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwiseThis is useful when the network is flaky/disconnected, so that summary can
    immediately be shown with the present data we have, but with an option to refresh
    it later on arrival of latest data from server! None of the callbacks are mandatory,
    so if 1st is nil, this method can be used to always fetch summary from server, and
    if 2nd is nil, this can be used to always fetch summary from local database!

## getFlatFormSummaryAsync

Gets flat responses by all the users associated with the form (It is advised to use getFormSummary() instead of this)

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {KASFormFlatSummary} flatSummary can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## getProcessedFormSummaryAsync

Gets processed summary from all the responses associated with the form (It is advised to use getFormSummary() instead of this)

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {KASFormProcessedSummary} processedSummary can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## getAggregatedFormSummaryAsync

Gets aggregated summary from all the responses associated with the form

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {KASFormAggregatedSummary} aggregatedSummary can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## getFormURLAsync

Gets the file url from server containing flat responses associated with the form

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {string} url can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## shareFormURL

Launches native share screen for the form url

### Parameters

-   `url` **[string][258]** to be shared

## getFormReactionAsync

Gets the consolidated reaction (likes and comments) of the conversation card associated with the form

### Parameters

-   `callback` **Callback** with below parameters:-   -   -   @param {KASFormReaction} reaction can be null in case of error
    -   -   -   @param {string} error message in case of error, null otherwise

## showAllReactions

Shows all the reaction screen (likes and comments) against the form

### Parameters

-   `showComments`  

## likeForm

Requests to add a like count to a form, the count may decrease if the current user has already liked the form

## addCommentOnForm

Requests to add a comment to a form

### Parameters

-   `comment`  

## respondToForm

Requests to add a response to a form, by launching response screen

## sendRemindersToRespond

Sends a reminder (a new conversation card) against the existing card

## copyFormAndForward

Launches the conversation picker to forward a copy of the existing form as a new conversation card

## closeForm

Closes the form associated with the card, no responses will be allowed further

## showEditFormPage

Editing the form associated with the card.

## updateFormPropertiesAsync

Post a request to update the properties associated with the form

### Parameters

-   `propertyUpdates` **[Array][259]&lt;[KASFormPropertyUpdateInfo][268]>** an array of all update infos that are needed to be performed, update infos can be created using KASFormPropertyUpdateFactory
-   `notifyUsers` **[Array][259]&lt;[string][258]>** send push notifications to these user ids regarding this update
-   `notificationMessage` **[string][258]** push notification message
-   `callback` **Callback** with below parameters:-   -   -   @param {boolean} success indicates if the update is successful or not

## sendNotificationToUsers

Requests to send push notification to a particular set of users with a custom message

### Parameters

-   `customNotificationMessage` **[CustomNotificationMessage][269]** list of userIds to whom the notification has to be sent
-   `callback` **Callback** with below parameters:-   -   -   @param {boolean} success indicates if the update is successful or not
    -   -   -   @param {string} error message in case of error, null otherwise

## generateThumbnailForPDFAsync

Generates Base64 thumbnail for a pdf document whose localPath is given

### Parameters

-   `localPath` **[string][258]** localPath of the pdf document to generate thumbnail:
-   `callback`  
-   `withHighRes`  

## Assets

## KASFormEmptyModule

## findPosition

Offset position of element

### Parameters

-   `element`  

## getStyle

Style value of element

### Parameters

-   `element`  
-   `styleName`  

## isIOSVersionAbove11

This function required because in iOS 11, UIWebView has a bug, due to which a blocking scenarios in native app.

Bug Description: Edit any contentEditable div/span or text input in HTML which have position fixed div at top. Now when we scroll up, the div disappears.

Reporduction path : Open Survey Creation -> Add a Multiple Choice question -> Tap on 2nd option and edit -> Scroll up -> Navigator bar disappears.
We can also easily reproduce this in Job, Lets meets and the Htmls where we are using fixed navigation bar.

We are tracking this bug with Apple bug ID : 35080721

## getErrorPropsForTelemetry

returns property bag with error message added
gets used to form props for reporting error telemetry event

### Parameters

-   `errorMsg`  

## removeElementFromArray

Removes an element from the given array at the specified index.
Use negative values for index to specify the position from the end of the array.

### Parameters

-   `array`  
-   `index`  

## CustomNotificationMessage

## KASActionPackageProperties

## KASActionProperties

## KASAttachment

### toJSON

The following string keys("ty", "afn", "asb", etc.) MUST be in sync with the Attachment object model representation in iOS and Android code.
This is vital for proper serialization and deserialization over the KAS bridge.

## KASAttachment

### toJSON

The following string keys("ty", "afn", "asb", etc.) MUST be in sync with the Attachment object model representation in iOS and Android code.
This is vital for proper serialization and deserialization over the KAS bridge.

## KASAttachment

### toJSON

The following string keys("ty", "afn", "asb", etc.) MUST be in sync with the Attachment object model representation in iOS and Android code.
This is vital for proper serialization and deserialization over the KAS bridge.

## KASAttachment

### toJSON

The following string keys("ty", "afn", "asb", etc.) MUST be in sync with the Attachment object model representation in iOS and Android code.
This is vital for proper serialization and deserialization over the KAS bridge.

## KASAttachmentFactory

## KASQuestionConfig

## KASQuestionConfig

## KASQuestionConfig

## KASQuestionResult

## KASQuestionResult

## KASQuestionResult

## KASQuestionResult

## KASAttachmentListQuestionResult

This model contains data for every response to an Attachment List Type
question.

## attachmentListType

attachmentListType: contains the type of the attachment list response

## userInfo

userInfo: contains instances of KASUser with details for the respondent
for the particular response so that we can show the name and profile
picture of the respondent.

## timeStamps

timeStamps: contains the response timestamps for every response.

## attachmentsResponseJSONStrings

attachmentsResponseJSONStrings: contains the list of attachments
corresponding to every response as a JSON string which is directly
available in the questionIdToAnswerMap.

## KASClient

The following enum values MUST be in sync with the AttachmentType enum representation in iOS and Android code.
This is vital for proper serialization and deserialization over the KAS bridge.

## KASCountryPhoneCode

## KASForm

## KASFormAggregatedSummary

## KASFormBatchResponseUnit

## KASFormFlatSummary

### getRespondedUserIds

Gets all the user ids who responded to the form

Returns **[Array][259]&lt;[string][258]>** list of all the responded user ids

### getQuestionResponsesForUserId

Gets all the responses of a user against a specific question

#### Parameters

-   `userId` **[string][258]** the unique id of the user
-   `questionId` **[string][258]** the id of the question

Returns **\[]** list of all answers given by the user for that question

### getResponsesForUserId

Gets all the responses of a user to a form

#### Parameters

-   `userId` **[string][258]** the unique id of the user

### getAllResponses

Gets all the responses of all the users

### getTotalResponseCount

Gets number of all responses by all users

Returns **[number][261]** number of all responses

## KASFormProcessedSummary

## KASFormProperty

## KASFormPropertyFactory

## KASFormPropertyUpdateFactory

## KASFormPropertyUpdateInfo

## KASFormReaction

## KASFormResponse

## KASFormResponseNotificationModel

## KASFormUserCapabilities

## KASForwardContext

## KASLocation

## KASNativeToolbarProperties

## KASO365User

## getResultsOrder

Gets all the option ids sorted in their total responses count (descending)

Returns **[Array][259]&lt;[number][261]>** list of all the option ids

## KASOptionResult

## KASPhoneNumber

## KASQuestion

## KASQuestionValidationResponse

## KASQuestionOption

## KASUser

## KASValidationRule

## KASVisibilityRule

[1]: #setcompatibilitymode

[2]: #parameters

[3]: #getusersdetailsasync

[4]: #parameters-1

[5]: #showuserprofileasync

[6]: #parameters-2

[7]: #startchatasync

[8]: #parameters-3

[9]: #getintegerationservicetokenasync

[10]: #parameters-4

[11]: #getdeviceidasync

[12]: #parameters-5

[13]: #showcontactpickerasync

[14]: #parameters-6

[15]: #istalkbackenabledasync

[16]: #parameters-7

[17]: #readtalkbackmessage

[18]: #parameters-8

[19]: #showimagepickerasync

[20]: #parameters-9

[21]: #showattachmentpickerasync

[22]: #parameters-10

[23]: #downloadattachmentasync

[24]: #parameters-11

[25]: #isattachmentdownloadingasync

[26]: #parameters-12

[27]: #cancelattachmentdownloadasync

[28]: #parameters-13

[29]: #showplacepickerasync

[30]: #parameters-14

[31]: #showbarcodescannerasync

[32]: #parameters-15

[33]: #showqrcodescannerasync

[34]: #parameters-16

[35]: #showdurationpickerasync

[36]: #parameters-17

[37]: #getdevicelocationasync

[38]: #parameters-18

[39]: #generateuuidasync

[40]: #parameters-19

[41]: #getcurrentdevicelocationasync

[42]: #parameters-20

[43]: #shownativeerrormessage

[44]: #parameters-21

[45]: #getapplocaleasync

[46]: #parameters-22

[47]: #getisapptimeformat24hoursasync

[48]: #parameters-23

[49]: #getcalendarnameasync

[50]: #parameters-24

[51]: #getconversationparticipantscountasync

[52]: #parameters-25

[53]: #getconversationparticipantsasync

[54]: #parameters-26

[55]: #getconversationnameasync

[56]: #parameters-27

[57]: #getconversationtypeasync

[58]: #parameters-28

[59]: #dismisscurrentscreen

[60]: #showprogressbar

[61]: #parameters-29

[62]: #hideprogressbar

[63]: #getcurrentuseridasync

[64]: #parameters-30

[65]: #setnativetoolbarproperties

[66]: #parameters-31

[67]: #getpackagepropertiesasync

[68]: #parameters-32

[69]: #showimageimmersiveview

[70]: #parameters-33

[71]: #openattachmentimmersiveview

[72]: #parameters-34

[73]: #openimmersiveviewforattachmentlist

[74]: #parameters-35

[75]: #hasstorageaccessforattachmenttype

[76]: #parameters-36

[77]: #generatebase64thumbnailasync

[78]: #parameters-37

[79]: #getfontsizemultiplierasync

[80]: #parameters-38

[81]: #getlocalizedstringsasync

[82]: #parameters-39

[83]: #getpackagecustomsettingsasync

[84]: #parameters-40

[85]: #logerror

[86]: #parameters-41

[87]: #logtoreport

[88]: #parameters-42

[89]: #recordevent

[90]: #parameters-43

[91]: #recordtelemetryevent

[92]: #parameters-44

[93]: #iscurrentusero365subscribedasync

[94]: #parameters-45

[95]: #geto365userdetailsasync

[96]: #parameters-46

[97]: #getforwardcontextasync

[98]: #parameters-47

[99]: #getclientdetailsasync

[100]: #parameters-48

[101]: #hardwarebackpresscallback

[102]: #parameters-49

[103]: #locinited

[104]: #parameters-50

[105]: #getstring

[106]: #parameters-51

[107]: #showlocationonmap

[108]: #parameters-52

[109]: #printf

[110]: #parameters-53

[111]: #performauthenticationasync

[112]: #parameters-54

[113]: #isauthenticationtyepsupportedasync

[114]: #parameters-55

[115]: #performspeechtotextasync

[116]: #parameters-56

[117]: #openlinkinbrowser

[118]: #parameters-57

[119]: #performhttprequest

[120]: #parameters-58

[121]: #constants

[122]: #initformasync

[123]: #parameters-59

[124]: #submitformrequest

[125]: #parameters-60

[126]: #submitformrequestv2

[127]: #parameters-61

[128]: #submitformrequestwithresponses

[129]: #parameters-62

[130]: #submitformrequestwithoutdismiss

[131]: #parameters-63

[132]: #updateform

[133]: #parameters-64

[134]: #canrespondtoformasync

[135]: #parameters-65

[136]: #getformasync

[137]: #parameters-66

[138]: #getformstatusasync

[139]: #parameters-67

[140]: #getmyformresponsesasync

[141]: #parameters-68

[142]: #getbatchresponsesasync

[143]: #parameters-69

[144]: #getresponsesfortimerangeasync

[145]: #parameters-70

[146]: #sumbitformresponse

[147]: #parameters-71

[148]: #sumbitformresponsewithoutdismiss

[149]: #parameters-72

[150]: #sumbitbatchformresponse

[151]: #parameters-73

[152]: #shouldseeformsummaryasync

[153]: #parameters-74

[154]: #getformusercapabilitiesasync

[155]: #parameters-75

[156]: #issubscribed

[157]: #parameters-76

[158]: #getformsummaryasync

[159]: #parameters-77

[160]: #getflatformsummaryasync

[161]: #parameters-78

[162]: #getprocessedformsummaryasync

[163]: #parameters-79

[164]: #getaggregatedformsummaryasync

[165]: #parameters-80

[166]: #getformurlasync

[167]: #parameters-81

[168]: #shareformurl

[169]: #parameters-82

[170]: #getformreactionasync

[171]: #parameters-83

[172]: #showallreactions

[173]: #parameters-84

[174]: #likeform

[175]: #addcommentonform

[176]: #parameters-85

[177]: #respondtoform

[178]: #sendreminderstorespond

[179]: #copyformandforward

[180]: #closeform

[181]: #showeditformpage

[182]: #updateformpropertiesasync

[183]: #parameters-86

[184]: #sendnotificationtousers

[185]: #parameters-87

[186]: #generatethumbnailforpdfasync

[187]: #parameters-88

[188]: #assets

[189]: #kasformemptymodule

[190]: #findposition

[191]: #parameters-89

[192]: #getstyle

[193]: #parameters-90

[194]: #isiosversionabove11

[195]: #geterrorpropsfortelemetry

[196]: #parameters-91

[197]: #removeelementfromarray

[198]: #parameters-92

[199]: #customnotificationmessage

[200]: #kasactionpackageproperties

[201]: #kasactionproperties

[202]: #kasattachment

[203]: #tojson

[204]: #kasattachment-1

[205]: #tojson-1

[206]: #kasattachment-2

[207]: #tojson-2

[208]: #kasattachment-3

[209]: #tojson-3

[210]: #kasattachmentfactory

[211]: #kasquestionconfig

[212]: #kasquestionconfig-1

[213]: #kasquestionconfig-2

[214]: #kasquestionresult

[215]: #kasquestionresult-1

[216]: #kasquestionresult-2

[217]: #kasquestionresult-3

[218]: #kasattachmentlistquestionresult

[219]: #attachmentlisttype

[220]: #userinfo

[221]: #timestamps

[222]: #attachmentsresponsejsonstrings

[223]: #kasclient

[224]: #kascountryphonecode

[225]: #kasform

[226]: #kasformaggregatedsummary

[227]: #kasformbatchresponseunit

[228]: #kasformflatsummary

[229]: #getrespondeduserids

[230]: #getquestionresponsesforuserid

[231]: #parameters-93

[232]: #getresponsesforuserid

[233]: #parameters-94

[234]: #getallresponses

[235]: #gettotalresponsecount

[236]: #kasformprocessedsummary

[237]: #kasformproperty

[238]: #kasformpropertyfactory

[239]: #kasformpropertyupdatefactory

[240]: #kasformpropertyupdateinfo

[241]: #kasformreaction

[242]: #kasformresponse

[243]: #kasformresponsenotificationmodel

[244]: #kasformusercapabilities

[245]: #kasforwardcontext

[246]: #kaslocation

[247]: #kasnativetoolbarproperties

[248]: #kaso365user

[249]: #getresultsorder

[250]: #kasoptionresult

[251]: #kasphonenumber

[252]: #kasquestion

[253]: #kasquestionvalidationresponse

[254]: #kasquestionoption

[255]: #kasuser

[256]: #kasvalidationrule

[257]: #kasvisibilityrule

[258]: https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String

[259]: https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array

[260]: https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean

[261]: https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number

[262]: #kasnativetoolbarproperties

[263]: #kasattachment

[264]: #kaslocation

[265]: #kasform

[266]: https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/JSON

[267]: #kasformbatchresponseunit

[268]: #kasformpropertyupdateinfo

[269]: #customnotificationmessage
